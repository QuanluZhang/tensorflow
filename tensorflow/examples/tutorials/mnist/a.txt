subg_inputs:  conv1/Variable
Tensor("conv1/Variable:0", shape=(5, 5, 1, 32), dtype=float32_ref)
shape:  (5, 5, 1, 32)
     shape3:  5
TTT:  Tensor("Placeholder_2:0", shape=(5, 5, 1, 32), dtype=float32)
subg_inputs:  _arg_Placeholder_0_0
subg_inputs:  reshape/Reshape/shape
Tensor("reshape/Reshape/shape:0", shape=(4,), dtype=int32)
shape:  (4,)
     shape3:  4
TTT:  Tensor("Placeholder_3:0", shape=(4,), dtype=int32)
---:  Tensor("Placeholder:0", shape=(50, 784), dtype=float32)
---:  Tensor("reshape/Reshape/shape:0", shape=(4,), dtype=int32)
YYYYYYYY:  Tensor("Placeholder:0", shape=(50, 784), dtype=float32)
+++: Tensor("Placeholder:0", shape=(50, 784), dtype=float32)
+++: Tensor("Placeholder_3:0", shape=(4,), dtype=int32)
---:  Tensor("conv1/Variable:0", shape=(5, 5, 1, 32), dtype=float32_ref)
+++: Tensor("Placeholder_2:0", shape=(5, 5, 1, 32), dtype=float32)
##############################################
node:  name: "Placeholder"
op: "Placeholder"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 50
      }
      dim {
        size: 784
      }
    }
  }
}

node:  name: "Placeholder_1"
op: "Placeholder"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 50
      }
      dim {
        size: 10
      }
    }
  }
}

node:  name: "reshape/Reshape/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\377\377\377\377\034\000\000\000\034\000\000\000\001\000\000\000"
    }
  }
}

node:  name: "reshape/Reshape"
op: "Reshape"
input: "Placeholder"
input: "Placeholder_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

node:  name: "conv1/truncated_normal/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\005\000\000\000\005\000\000\000\001\000\000\000 \000\000\000"
    }
  }
}

node:  name: "conv1/truncated_normal/mean"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

node:  name: "conv1/truncated_normal/stddev"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.10000000149011612
    }
  }
}

node:  name: "conv1/truncated_normal/TruncatedNormal"
op: "TruncatedNormal"
input: "conv1/truncated_normal/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

node:  name: "conv1/truncated_normal/mul"
op: "Mul"
input: "conv1/truncated_normal/TruncatedNormal"
input: "conv1/truncated_normal/stddev"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

node:  name: "conv1/truncated_normal"
op: "Add"
input: "conv1/truncated_normal/mul"
input: "conv1/truncated_normal/mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

node:  name: "conv1/Variable"
op: "VariableV2"
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 5
      }
      dim {
        size: 5
      }
      dim {
        size: 1
      }
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

node:  name: "conv1/Variable/Assign"
op: "Assign"
input: "conv1/Variable"
input: "conv1/truncated_normal"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1/Variable"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

node:  name: "conv1/Variable/read"
op: "Identity"
input: "Placeholder_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1/Variable"
    }
  }
}

node:  name: "conv1/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 32
        }
      }
      float_val: 0.10000000149011612
    }
  }
}

node:  name: "conv1/Variable_1"
op: "VariableV2"
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

node:  name: "conv1/Variable_1/Assign"
op: "Assign"
input: "conv1/Variable_1"
input: "conv1/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1/Variable_1"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

node:  name: "conv1/Variable_1/read"
op: "Identity"
input: "conv1/Variable_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1/Variable_1"
    }
  }
}

node:  name: "conv1/Conv2D"
op: "Conv2D"
input: "reshape/Reshape"
input: "conv1/Variable/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

node:  name: "conv1/add"
op: "Add"
input: "conv1/Conv2D"
input: "conv1/Variable_1/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

node:  name: "conv1/Relu"
op: "Relu"
input: "conv1/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

node:  name: "pool1/MaxPool"
op: "MaxPool"
input: "conv1/Relu"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "ksize"
  value {
    list {
      i: 1
      i: 2
      i: 2
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 2
      i: 2
      i: 1
    }
  }
}

node:  name: "conv2/truncated_normal/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\005\000\000\000\005\000\000\000 \000\000\000@\000\000\000"
    }
  }
}

node:  name: "conv2/truncated_normal/mean"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

node:  name: "conv2/truncated_normal/stddev"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.10000000149011612
    }
  }
}

node:  name: "conv2/truncated_normal/TruncatedNormal"
op: "TruncatedNormal"
input: "conv2/truncated_normal/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

node:  name: "conv2/truncated_normal/mul"
op: "Mul"
input: "conv2/truncated_normal/TruncatedNormal"
input: "conv2/truncated_normal/stddev"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

node:  name: "conv2/truncated_normal"
op: "Add"
input: "conv2/truncated_normal/mul"
input: "conv2/truncated_normal/mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

node:  name: "conv2/Variable"
op: "VariableV2"
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 5
      }
      dim {
        size: 5
      }
      dim {
        size: 32
      }
      dim {
        size: 64
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

node:  name: "conv2/Variable/Assign"
op: "Assign"
input: "conv2/Variable"
input: "conv2/truncated_normal"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv2/Variable"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

node:  name: "conv2/Variable/read"
op: "Identity"
input: "conv2/Variable"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv2/Variable"
    }
  }
}

node:  name: "conv2/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 64
        }
      }
      float_val: 0.10000000149011612
    }
  }
}

node:  name: "conv2/Variable_1"
op: "VariableV2"
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 64
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

node:  name: "conv2/Variable_1/Assign"
op: "Assign"
input: "conv2/Variable_1"
input: "conv2/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv2/Variable_1"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

node:  name: "conv2/Variable_1/read"
op: "Identity"
input: "conv2/Variable_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv2/Variable_1"
    }
  }
}

node:  name: "conv2/Conv2D"
op: "Conv2D"
input: "pool1/MaxPool"
input: "conv2/Variable/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

node:  name: "conv2/add"
op: "Add"
input: "conv2/Conv2D"
input: "conv2/Variable_1/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

node:  name: "conv2/Relu"
op: "Relu"
input: "conv2/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

node:  name: "pool2/MaxPool"
op: "MaxPool"
input: "conv2/Relu"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "ksize"
  value {
    list {
      i: 1
      i: 2
      i: 2
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 2
      i: 2
      i: 1
    }
  }
}

node:  name: "fc1/truncated_normal/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "@\014\000\000\000\004\000\000"
    }
  }
}

node:  name: "fc1/truncated_normal/mean"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

node:  name: "fc1/truncated_normal/stddev"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.10000000149011612
    }
  }
}

node:  name: "fc1/truncated_normal/TruncatedNormal"
op: "TruncatedNormal"
input: "fc1/truncated_normal/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

node:  name: "fc1/truncated_normal/mul"
op: "Mul"
input: "fc1/truncated_normal/TruncatedNormal"
input: "fc1/truncated_normal/stddev"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

node:  name: "fc1/truncated_normal"
op: "Add"
input: "fc1/truncated_normal/mul"
input: "fc1/truncated_normal/mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

node:  name: "fc1/Variable"
op: "VariableV2"
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3136
      }
      dim {
        size: 1024
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

node:  name: "fc1/Variable/Assign"
op: "Assign"
input: "fc1/Variable"
input: "fc1/truncated_normal"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fc1/Variable"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

node:  name: "fc1/Variable/read"
op: "Identity"
input: "fc1/Variable"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fc1/Variable"
    }
  }
}

node:  name: "fc1/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 1024
        }
      }
      float_val: 0.10000000149011612
    }
  }
}

node:  name: "fc1/Variable_1"
op: "VariableV2"
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1024
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

node:  name: "fc1/Variable_1/Assign"
op: "Assign"
input: "fc1/Variable_1"
input: "fc1/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fc1/Variable_1"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

node:  name: "fc1/Variable_1/read"
op: "Identity"
input: "fc1/Variable_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fc1/Variable_1"
    }
  }
}

node:  name: "fc1/Reshape/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\377\377\377\377@\014\000\000"
    }
  }
}

node:  name: "fc1/Reshape"
op: "Reshape"
input: "pool2/MaxPool"
input: "fc1/Reshape/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

node:  name: "fc1/MatMul"
op: "MatMul"
input: "fc1/Reshape"
input: "fc1/Variable/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

node:  name: "fc1/add"
op: "Add"
input: "fc1/MatMul"
input: "fc1/Variable_1/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

node:  name: "fc1/Relu"
op: "Relu"
input: "fc1/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

node:  name: "dropout/Placeholder"
op: "Placeholder"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      unknown_rank: true
    }
  }
}

node:  name: "dropout/dropout/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "2\000\000\000\000\004\000\000"
    }
  }
}

node:  name: "dropout/dropout/random_uniform/min"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

node:  name: "dropout/dropout/random_uniform/max"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

node:  name: "dropout/dropout/random_uniform/RandomUniform"
op: "RandomUniform"
input: "dropout/dropout/Shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

node:  name: "dropout/dropout/random_uniform/sub"
op: "Sub"
input: "dropout/dropout/random_uniform/max"
input: "dropout/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

node:  name: "dropout/dropout/random_uniform/mul"
op: "Mul"
input: "dropout/dropout/random_uniform/RandomUniform"
input: "dropout/dropout/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

node:  name: "dropout/dropout/random_uniform"
op: "Add"
input: "dropout/dropout/random_uniform/mul"
input: "dropout/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

node:  name: "dropout/dropout/add"
op: "Add"
input: "dropout/Placeholder"
input: "dropout/dropout/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

node:  name: "dropout/dropout/Floor"
op: "Floor"
input: "dropout/dropout/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

node:  name: "dropout/dropout/div"
op: "RealDiv"
input: "fc1/Relu"
input: "dropout/Placeholder"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

node:  name: "dropout/dropout/mul"
op: "Mul"
input: "dropout/dropout/div"
input: "dropout/dropout/Floor"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

node:  name: "fc2/truncated_normal/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\004\000\000\n\000\000\000"
    }
  }
}

node:  name: "fc2/truncated_normal/mean"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

node:  name: "fc2/truncated_normal/stddev"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.10000000149011612
    }
  }
}

node:  name: "fc2/truncated_normal/TruncatedNormal"
op: "TruncatedNormal"
input: "fc2/truncated_normal/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

node:  name: "fc2/truncated_normal/mul"
op: "Mul"
input: "fc2/truncated_normal/TruncatedNormal"
input: "fc2/truncated_normal/stddev"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

node:  name: "fc2/truncated_normal"
op: "Add"
input: "fc2/truncated_normal/mul"
input: "fc2/truncated_normal/mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

node:  name: "fc2/Variable"
op: "VariableV2"
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1024
      }
      dim {
        size: 10
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

node:  name: "fc2/Variable/Assign"
op: "Assign"
input: "fc2/Variable"
input: "fc2/truncated_normal"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fc2/Variable"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

node:  name: "fc2/Variable/read"
op: "Identity"
input: "fc2/Variable"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fc2/Variable"
    }
  }
}

node:  name: "fc2/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 10
        }
      }
      float_val: 0.10000000149011612
    }
  }
}

node:  name: "fc2/Variable_1"
op: "VariableV2"
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 10
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

node:  name: "fc2/Variable_1/Assign"
op: "Assign"
input: "fc2/Variable_1"
input: "fc2/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fc2/Variable_1"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

node:  name: "fc2/Variable_1/read"
op: "Identity"
input: "fc2/Variable_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fc2/Variable_1"
    }
  }
}

node:  name: "fc2/MatMul"
op: "MatMul"
input: "dropout/dropout/mul"
input: "fc2/Variable/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

node:  name: "fc2/add"
op: "Add"
input: "fc2/MatMul"
input: "fc2/Variable_1/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

node:  name: "loss/Rank"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}

node:  name: "loss/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "2\000\000\000\n\000\000\000"
    }
  }
}

node:  name: "loss/Rank_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}

node:  name: "loss/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "2\000\000\000\n\000\000\000"
    }
  }
}

node:  name: "loss/Sub/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

node:  name: "loss/Sub"
op: "Sub"
input: "loss/Rank_1"
input: "loss/Sub/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

node:  name: "loss/Slice/begin"
op: "Pack"
input: "loss/Sub"
attr {
  key: "N"
  value {
    i: 1
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "axis"
  value {
    i: 0
  }
}

node:  name: "loss/Slice/size"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}

node:  name: "loss/Slice"
op: "Slice"
input: "loss/Shape_1"
input: "loss/Slice/begin"
input: "loss/Slice/size"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

node:  name: "loss/concat/values_0"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: -1
    }
  }
}

node:  name: "loss/concat/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}

node:  name: "loss/concat"
op: "ConcatV2"
input: "loss/concat/values_0"
input: "loss/Slice"
input: "loss/concat/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}

node:  name: "loss/Reshape"
op: "Reshape"
input: "fc2/add"
input: "loss/concat"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

node:  name: "loss/Rank_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}

node:  name: "loss/Shape_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "2\000\000\000\n\000\000\000"
    }
  }
}

node:  name: "loss/Sub_1/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

node:  name: "loss/Sub_1"
op: "Sub"
input: "loss/Rank_2"
input: "loss/Sub_1/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

node:  name: "loss/Slice_1/begin"
op: "Pack"
input: "loss/Sub_1"
attr {
  key: "N"
  value {
    i: 1
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "axis"
  value {
    i: 0
  }
}

node:  name: "loss/Slice_1/size"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}

node:  name: "loss/Slice_1"
op: "Slice"
input: "loss/Shape_2"
input: "loss/Slice_1/begin"
input: "loss/Slice_1/size"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

node:  name: "loss/concat_1/values_0"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: -1
    }
  }
}

node:  name: "loss/concat_1/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}

node:  name: "loss/concat_1"
op: "ConcatV2"
input: "loss/concat_1/values_0"
input: "loss/Slice_1"
input: "loss/concat_1/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}

node:  name: "loss/Reshape_1"
op: "Reshape"
input: "Placeholder_1"
input: "loss/concat_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

node:  name: "loss/SoftmaxCrossEntropyWithLogits"
op: "SoftmaxCrossEntropyWithLogits"
input: "loss/Reshape"
input: "loss/Reshape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

node:  name: "loss/Sub_2/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

node:  name: "loss/Sub_2"
op: "Sub"
input: "loss/Rank"
input: "loss/Sub_2/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

node:  name: "loss/Slice_2/begin"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}

node:  name: "loss/Slice_2/size"
op: "Pack"
input: "loss/Sub_2"
attr {
  key: "N"
  value {
    i: 1
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "axis"
  value {
    i: 0
  }
}

node:  name: "loss/Slice_2"
op: "Slice"
input: "loss/Shape"
input: "loss/Slice_2/begin"
input: "loss/Slice_2/size"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

node:  name: "loss/Reshape_2"
op: "Reshape"
input: "loss/SoftmaxCrossEntropyWithLogits"
input: "loss/Slice_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

node:  name: "Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}

node:  name: "Mean"
op: "Mean"
input: "loss/Reshape_2"
input: "Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

node:  name: "adam_optimizer/gradients/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}

node:  name: "adam_optimizer/gradients/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

node:  name: "adam_optimizer/gradients/Fill"
op: "Fill"
input: "adam_optimizer/gradients/Shape"
input: "adam_optimizer/gradients/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

node:  name: "adam_optimizer/gradients/Mean_grad/Reshape/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}

node:  name: "adam_optimizer/gradients/Mean_grad/Reshape"
op: "Reshape"
input: "adam_optimizer/gradients/Fill"
input: "adam_optimizer/gradients/Mean_grad/Reshape/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

node:  name: "adam_optimizer/gradients/Mean_grad/Tile/multiples"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 50
    }
  }
}

node:  name: "adam_optimizer/gradients/Mean_grad/Tile"
op: "Tile"
input: "adam_optimizer/gradients/Mean_grad/Reshape"
input: "adam_optimizer/gradients/Mean_grad/Tile/multiples"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}

node:  name: "adam_optimizer/gradients/Mean_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 50
    }
  }
}

node:  name: "adam_optimizer/gradients/Mean_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}

node:  name: "adam_optimizer/gradients/Mean_grad/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}

node:  name: "adam_optimizer/gradients/Mean_grad/Prod"
op: "Prod"
input: "adam_optimizer/gradients/Mean_grad/Shape"
input: "adam_optimizer/gradients/Mean_grad/Const"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

node:  name: "adam_optimizer/gradients/Mean_grad/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}

node:  name: "adam_optimizer/gradients/Mean_grad/Prod_1"
op: "Prod"
input: "adam_optimizer/gradients/Mean_grad/Shape_1"
input: "adam_optimizer/gradients/Mean_grad/Const_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

node:  name: "adam_optimizer/gradients/Mean_grad/Maximum/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

node:  name: "adam_optimizer/gradients/Mean_grad/Maximum"
op: "Maximum"
input: "adam_optimizer/gradients/Mean_grad/Prod_1"
input: "adam_optimizer/gradients/Mean_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

node:  name: "adam_optimizer/gradients/Mean_grad/floordiv"
op: "FloorDiv"
input: "adam_optimizer/gradients/Mean_grad/Prod"
input: "adam_optimizer/gradients/Mean_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

node:  name: "adam_optimizer/gradients/Mean_grad/Cast"
op: "Cast"
input: "adam_optimizer/gradients/Mean_grad/floordiv"
attr {
  key: "DstT"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "SrcT"
  value {
    type: DT_INT32
  }
}

node:  name: "adam_optimizer/gradients/Mean_grad/truediv"
op: "RealDiv"
input: "adam_optimizer/gradients/Mean_grad/Tile"
input: "adam_optimizer/gradients/Mean_grad/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

node:  name: "adam_optimizer/gradients/loss/Reshape_2_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 50
    }
  }
}

node:  name: "adam_optimizer/gradients/loss/Reshape_2_grad/Reshape"
op: "Reshape"
input: "adam_optimizer/gradients/Mean_grad/truediv"
input: "adam_optimizer/gradients/loss/Reshape_2_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

node:  name: "adam_optimizer/gradients/zeros_like"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 50
        }
        dim {
          size: 10
        }
      }
      float_val: 0.0
    }
  }
}

node:  name: "adam_optimizer/gradients/loss/SoftmaxCrossEntropyWithLogits_grad/ExpandDims/dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}

node:  name: "adam_optimizer/gradients/loss/SoftmaxCrossEntropyWithLogits_grad/ExpandDims"
op: "ExpandDims"
input: "adam_optimizer/gradients/loss/Reshape_2_grad/Reshape"
input: "adam_optimizer/gradients/loss/SoftmaxCrossEntropyWithLogits_grad/ExpandDims/dim"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tdim"
  value {
    type: DT_INT32
  }
}

node:  name: "adam_optimizer/gradients/loss/SoftmaxCrossEntropyWithLogits_grad/mul"
op: "Mul"
input: "adam_optimizer/gradients/loss/SoftmaxCrossEntropyWithLogits_grad/ExpandDims"
input: "loss/SoftmaxCrossEntropyWithLogits:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

node:  name: "adam_optimizer/gradients/loss/Reshape_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "2\000\000\000\n\000\000\000"
    }
  }
}

node:  name: "adam_optimizer/gradients/loss/Reshape_grad/Reshape"
op: "Reshape"
input: "adam_optimizer/gradients/loss/SoftmaxCrossEntropyWithLogits_grad/mul"
input: "adam_optimizer/gradients/loss/Reshape_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

node:  name: "adam_optimizer/gradients/fc2/add_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "2\000\000\000\n\000\000\000"
    }
  }
}

node:  name: "adam_optimizer/gradients/fc2/add_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 10
    }
  }
}

node:  name: "adam_optimizer/gradients/fc2/add_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "adam_optimizer/gradients/fc2/add_grad/Shape"
input: "adam_optimizer/gradients/fc2/add_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

node:  name: "adam_optimizer/gradients/fc2/add_grad/Sum"
op: "Sum"
input: "adam_optimizer/gradients/loss/Reshape_grad/Reshape"
input: "adam_optimizer/gradients/fc2/add_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

node:  name: "adam_optimizer/gradients/fc2/add_grad/Reshape"
op: "Reshape"
input: "adam_optimizer/gradients/fc2/add_grad/Sum"
input: "adam_optimizer/gradients/fc2/add_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

node:  name: "adam_optimizer/gradients/fc2/add_grad/Sum_1"
op: "Sum"
input: "adam_optimizer/gradients/loss/Reshape_grad/Reshape"
input: "adam_optimizer/gradients/fc2/add_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

node:  name: "adam_optimizer/gradients/fc2/add_grad/Reshape_1"
op: "Reshape"
input: "adam_optimizer/gradients/fc2/add_grad/Sum_1"
input: "adam_optimizer/gradients/fc2/add_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

node:  name: "adam_optimizer/gradients/fc2/add_grad/tuple/group_deps"
op: "NoOp"
input: "^adam_optimizer/gradients/fc2/add_grad/Reshape"
input: "^adam_optimizer/gradients/fc2/add_grad/Reshape_1"

node:  name: "adam_optimizer/gradients/fc2/add_grad/tuple/control_dependency"
op: "Identity"
input: "adam_optimizer/gradients/fc2/add_grad/Reshape"
input: "^adam_optimizer/gradients/fc2/add_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@adam_optimizer/gradients/fc2/add_grad/Reshape"
    }
  }
}

node:  name: "adam_optimizer/gradients/fc2/add_grad/tuple/control_dependency_1"
op: "Identity"
input: "adam_optimizer/gradients/fc2/add_grad/Reshape_1"
input: "^adam_optimizer/gradients/fc2/add_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@adam_optimizer/gradients/fc2/add_grad/Reshape_1"
    }
  }
}

node:  name: "adam_optimizer/gradients/fc2/MatMul_grad/MatMul"
op: "MatMul"
input: "adam_optimizer/gradients/fc2/add_grad/tuple/control_dependency"
input: "fc2/Variable/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}

node:  name: "adam_optimizer/gradients/fc2/MatMul_grad/MatMul_1"
op: "MatMul"
input: "dropout/dropout/mul"
input: "adam_optimizer/gradients/fc2/add_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

node:  name: "adam_optimizer/gradients/fc2/MatMul_grad/tuple/group_deps"
op: "NoOp"
input: "^adam_optimizer/gradients/fc2/MatMul_grad/MatMul"
input: "^adam_optimizer/gradients/fc2/MatMul_grad/MatMul_1"

node:  name: "adam_optimizer/gradients/fc2/MatMul_grad/tuple/control_dependency"
op: "Identity"
input: "adam_optimizer/gradients/fc2/MatMul_grad/MatMul"
input: "^adam_optimizer/gradients/fc2/MatMul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@adam_optimizer/gradients/fc2/MatMul_grad/MatMul"
    }
  }
}

node:  name: "adam_optimizer/gradients/fc2/MatMul_grad/tuple/control_dependency_1"
op: "Identity"
input: "adam_optimizer/gradients/fc2/MatMul_grad/MatMul_1"
input: "^adam_optimizer/gradients/fc2/MatMul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@adam_optimizer/gradients/fc2/MatMul_grad/MatMul_1"
    }
  }
}

node:  name: "adam_optimizer/gradients/dropout/dropout/mul_grad/Shape"
op: "Shape"
input: "dropout/dropout/div"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

node:  name: "adam_optimizer/gradients/dropout/dropout/mul_grad/Shape_1"
op: "Shape"
input: "dropout/dropout/Floor"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

node:  name: "adam_optimizer/gradients/dropout/dropout/mul_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "adam_optimizer/gradients/dropout/dropout/mul_grad/Shape"
input: "adam_optimizer/gradients/dropout/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

node:  name: "adam_optimizer/gradients/dropout/dropout/mul_grad/mul"
op: "Mul"
input: "adam_optimizer/gradients/fc2/MatMul_grad/tuple/control_dependency"
input: "dropout/dropout/Floor"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

node:  name: "adam_optimizer/gradients/dropout/dropout/mul_grad/Sum"
op: "Sum"
input: "adam_optimizer/gradients/dropout/dropout/mul_grad/mul"
input: "adam_optimizer/gradients/dropout/dropout/mul_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

node:  name: "adam_optimizer/gradients/dropout/dropout/mul_grad/Reshape"
op: "Reshape"
input: "adam_optimizer/gradients/dropout/dropout/mul_grad/Sum"
input: "adam_optimizer/gradients/dropout/dropout/mul_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

node:  name: "adam_optimizer/gradients/dropout/dropout/mul_grad/mul_1"
op: "Mul"
input: "dropout/dropout/div"
input: "adam_optimizer/gradients/fc2/MatMul_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

node:  name: "adam_optimizer/gradients/dropout/dropout/mul_grad/Sum_1"
op: "Sum"
input: "adam_optimizer/gradients/dropout/dropout/mul_grad/mul_1"
input: "adam_optimizer/gradients/dropout/dropout/mul_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

node:  name: "adam_optimizer/gradients/dropout/dropout/mul_grad/Reshape_1"
op: "Reshape"
input: "adam_optimizer/gradients/dropout/dropout/mul_grad/Sum_1"
input: "adam_optimizer/gradients/dropout/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

node:  name: "adam_optimizer/gradients/dropout/dropout/mul_grad/tuple/group_deps"
op: "NoOp"
input: "^adam_optimizer/gradients/dropout/dropout/mul_grad/Reshape"
input: "^adam_optimizer/gradients/dropout/dropout/mul_grad/Reshape_1"

node:  name: "adam_optimizer/gradients/dropout/dropout/mul_grad/tuple/control_dependency"
op: "Identity"
input: "adam_optimizer/gradients/dropout/dropout/mul_grad/Reshape"
input: "^adam_optimizer/gradients/dropout/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@adam_optimizer/gradients/dropout/dropout/mul_grad/Reshape"
    }
  }
}

node:  name: "adam_optimizer/gradients/dropout/dropout/mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "adam_optimizer/gradients/dropout/dropout/mul_grad/Reshape_1"
input: "^adam_optimizer/gradients/dropout/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@adam_optimizer/gradients/dropout/dropout/mul_grad/Reshape_1"
    }
  }
}

node:  name: "adam_optimizer/gradients/dropout/dropout/div_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "2\000\000\000\000\004\000\000"
    }
  }
}

node:  name: "adam_optimizer/gradients/dropout/dropout/div_grad/Shape_1"
op: "Shape"
input: "dropout/Placeholder"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

node:  name: "adam_optimizer/gradients/dropout/dropout/div_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "adam_optimizer/gradients/dropout/dropout/div_grad/Shape"
input: "adam_optimizer/gradients/dropout/dropout/div_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

node:  name: "adam_optimizer/gradients/dropout/dropout/div_grad/RealDiv"
op: "RealDiv"
input: "adam_optimizer/gradients/dropout/dropout/mul_grad/tuple/control_dependency"
input: "dropout/Placeholder"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

node:  name: "adam_optimizer/gradients/dropout/dropout/div_grad/Sum"
op: "Sum"
input: "adam_optimizer/gradients/dropout/dropout/div_grad/RealDiv"
input: "adam_optimizer/gradients/dropout/dropout/div_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

node:  name: "adam_optimizer/gradients/dropout/dropout/div_grad/Reshape"
op: "Reshape"
input: "adam_optimizer/gradients/dropout/dropout/div_grad/Sum"
input: "adam_optimizer/gradients/dropout/dropout/div_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

node:  name: "adam_optimizer/gradients/dropout/dropout/div_grad/Neg"
op: "Neg"
input: "fc1/Relu"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

node:  name: "adam_optimizer/gradients/dropout/dropout/div_grad/RealDiv_1"
op: "RealDiv"
input: "adam_optimizer/gradients/dropout/dropout/div_grad/Neg"
input: "dropout/Placeholder"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

node:  name: "adam_optimizer/gradients/dropout/dropout/div_grad/RealDiv_2"
op: "RealDiv"
input: "adam_optimizer/gradients/dropout/dropout/div_grad/RealDiv_1"
input: "dropout/Placeholder"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

node:  name: "adam_optimizer/gradients/dropout/dropout/div_grad/mul"
op: "Mul"
input: "adam_optimizer/gradients/dropout/dropout/mul_grad/tuple/control_dependency"
input: "adam_optimizer/gradients/dropout/dropout/div_grad/RealDiv_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

node:  name: "adam_optimizer/gradients/dropout/dropout/div_grad/Sum_1"
op: "Sum"
input: "adam_optimizer/gradients/dropout/dropout/div_grad/mul"
input: "adam_optimizer/gradients/dropout/dropout/div_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

node:  name: "adam_optimizer/gradients/dropout/dropout/div_grad/Reshape_1"
op: "Reshape"
input: "adam_optimizer/gradients/dropout/dropout/div_grad/Sum_1"
input: "adam_optimizer/gradients/dropout/dropout/div_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

node:  name: "adam_optimizer/gradients/dropout/dropout/div_grad/tuple/group_deps"
op: "NoOp"
input: "^adam_optimizer/gradients/dropout/dropout/div_grad/Reshape"
input: "^adam_optimizer/gradients/dropout/dropout/div_grad/Reshape_1"

node:  name: "adam_optimizer/gradients/dropout/dropout/div_grad/tuple/control_dependency"
op: "Identity"
input: "adam_optimizer/gradients/dropout/dropout/div_grad/Reshape"
input: "^adam_optimizer/gradients/dropout/dropout/div_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@adam_optimizer/gradients/dropout/dropout/div_grad/Reshape"
    }
  }
}

node:  name: "adam_optimizer/gradients/dropout/dropout/div_grad/tuple/control_dependency_1"
op: "Identity"
input: "adam_optimizer/gradients/dropout/dropout/div_grad/Reshape_1"
input: "^adam_optimizer/gradients/dropout/dropout/div_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@adam_optimizer/gradients/dropout/dropout/div_grad/Reshape_1"
    }
  }
}

node:  name: "adam_optimizer/gradients/fc1/Relu_grad/ReluGrad"
op: "ReluGrad"
input: "adam_optimizer/gradients/dropout/dropout/div_grad/tuple/control_dependency"
input: "fc1/Relu"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

node:  name: "adam_optimizer/gradients/fc1/add_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "2\000\000\000\000\004\000\000"
    }
  }
}

node:  name: "adam_optimizer/gradients/fc1/add_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1024
    }
  }
}

node:  name: "adam_optimizer/gradients/fc1/add_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "adam_optimizer/gradients/fc1/add_grad/Shape"
input: "adam_optimizer/gradients/fc1/add_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

node:  name: "adam_optimizer/gradients/fc1/add_grad/Sum"
op: "Sum"
input: "adam_optimizer/gradients/fc1/Relu_grad/ReluGrad"
input: "adam_optimizer/gradients/fc1/add_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

node:  name: "adam_optimizer/gradients/fc1/add_grad/Reshape"
op: "Reshape"
input: "adam_optimizer/gradients/fc1/add_grad/Sum"
input: "adam_optimizer/gradients/fc1/add_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

node:  name: "adam_optimizer/gradients/fc1/add_grad/Sum_1"
op: "Sum"
input: "adam_optimizer/gradients/fc1/Relu_grad/ReluGrad"
input: "adam_optimizer/gradients/fc1/add_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

node:  name: "adam_optimizer/gradients/fc1/add_grad/Reshape_1"
op: "Reshape"
input: "adam_optimizer/gradients/fc1/add_grad/Sum_1"
input: "adam_optimizer/gradients/fc1/add_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

node:  name: "adam_optimizer/gradients/fc1/add_grad/tuple/group_deps"
op: "NoOp"
input: "^adam_optimizer/gradients/fc1/add_grad/Reshape"
input: "^adam_optimizer/gradients/fc1/add_grad/Reshape_1"

node:  name: "adam_optimizer/gradients/fc1/add_grad/tuple/control_dependency"
op: "Identity"
input: "adam_optimizer/gradients/fc1/add_grad/Reshape"
input: "^adam_optimizer/gradients/fc1/add_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@adam_optimizer/gradients/fc1/add_grad/Reshape"
    }
  }
}

node:  name: "adam_optimizer/gradients/fc1/add_grad/tuple/control_dependency_1"
op: "Identity"
input: "adam_optimizer/gradients/fc1/add_grad/Reshape_1"
input: "^adam_optimizer/gradients/fc1/add_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@adam_optimizer/gradients/fc1/add_grad/Reshape_1"
    }
  }
}

node:  name: "adam_optimizer/gradients/fc1/MatMul_grad/MatMul"
op: "MatMul"
input: "adam_optimizer/gradients/fc1/add_grad/tuple/control_dependency"
input: "fc1/Variable/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}

node:  name: "adam_optimizer/gradients/fc1/MatMul_grad/MatMul_1"
op: "MatMul"
input: "fc1/Reshape"
input: "adam_optimizer/gradients/fc1/add_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

node:  name: "adam_optimizer/gradients/fc1/MatMul_grad/tuple/group_deps"
op: "NoOp"
input: "^adam_optimizer/gradients/fc1/MatMul_grad/MatMul"
input: "^adam_optimizer/gradients/fc1/MatMul_grad/MatMul_1"

node:  name: "adam_optimizer/gradients/fc1/MatMul_grad/tuple/control_dependency"
op: "Identity"
input: "adam_optimizer/gradients/fc1/MatMul_grad/MatMul"
input: "^adam_optimizer/gradients/fc1/MatMul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@adam_optimizer/gradients/fc1/MatMul_grad/MatMul"
    }
  }
}

node:  name: "adam_optimizer/gradients/fc1/MatMul_grad/tuple/control_dependency_1"
op: "Identity"
input: "adam_optimizer/gradients/fc1/MatMul_grad/MatMul_1"
input: "^adam_optimizer/gradients/fc1/MatMul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@adam_optimizer/gradients/fc1/MatMul_grad/MatMul_1"
    }
  }
}

node:  name: "adam_optimizer/gradients/fc1/Reshape_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "2\000\000\000\007\000\000\000\007\000\000\000@\000\000\000"
    }
  }
}

node:  name: "adam_optimizer/gradients/fc1/Reshape_grad/Reshape"
op: "Reshape"
input: "adam_optimizer/gradients/fc1/MatMul_grad/tuple/control_dependency"
input: "adam_optimizer/gradients/fc1/Reshape_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

node:  name: "adam_optimizer/gradients/pool2/MaxPool_grad/MaxPoolGrad"
op: "MaxPoolGrad"
input: "conv2/Relu"
input: "pool2/MaxPool"
input: "adam_optimizer/gradients/fc1/Reshape_grad/Reshape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "ksize"
  value {
    list {
      i: 1
      i: 2
      i: 2
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 2
      i: 2
      i: 1
    }
  }
}

node:  name: "adam_optimizer/gradients/conv2/Relu_grad/ReluGrad"
op: "ReluGrad"
input: "adam_optimizer/gradients/pool2/MaxPool_grad/MaxPoolGrad"
input: "conv2/Relu"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

node:  name: "adam_optimizer/gradients/conv2/add_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "2\000\000\000\016\000\000\000\016\000\000\000@\000\000\000"
    }
  }
}

node:  name: "adam_optimizer/gradients/conv2/add_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 64
    }
  }
}

node:  name: "adam_optimizer/gradients/conv2/add_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "adam_optimizer/gradients/conv2/add_grad/Shape"
input: "adam_optimizer/gradients/conv2/add_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

node:  name: "adam_optimizer/gradients/conv2/add_grad/Sum"
op: "Sum"
input: "adam_optimizer/gradients/conv2/Relu_grad/ReluGrad"
input: "adam_optimizer/gradients/conv2/add_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

node:  name: "adam_optimizer/gradients/conv2/add_grad/Reshape"
op: "Reshape"
input: "adam_optimizer/gradients/conv2/add_grad/Sum"
input: "adam_optimizer/gradients/conv2/add_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

node:  name: "adam_optimizer/gradients/conv2/add_grad/Sum_1"
op: "Sum"
input: "adam_optimizer/gradients/conv2/Relu_grad/ReluGrad"
input: "adam_optimizer/gradients/conv2/add_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

node:  name: "adam_optimizer/gradients/conv2/add_grad/Reshape_1"
op: "Reshape"
input: "adam_optimizer/gradients/conv2/add_grad/Sum_1"
input: "adam_optimizer/gradients/conv2/add_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

node:  name: "adam_optimizer/gradients/conv2/add_grad/tuple/group_deps"
op: "NoOp"
input: "^adam_optimizer/gradients/conv2/add_grad/Reshape"
input: "^adam_optimizer/gradients/conv2/add_grad/Reshape_1"

node:  name: "adam_optimizer/gradients/conv2/add_grad/tuple/control_dependency"
op: "Identity"
input: "adam_optimizer/gradients/conv2/add_grad/Reshape"
input: "^adam_optimizer/gradients/conv2/add_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@adam_optimizer/gradients/conv2/add_grad/Reshape"
    }
  }
}

node:  name: "adam_optimizer/gradients/conv2/add_grad/tuple/control_dependency_1"
op: "Identity"
input: "adam_optimizer/gradients/conv2/add_grad/Reshape_1"
input: "^adam_optimizer/gradients/conv2/add_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@adam_optimizer/gradients/conv2/add_grad/Reshape_1"
    }
  }
}

node:  name: "adam_optimizer/gradients/conv2/Conv2D_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "2\000\000\000\016\000\000\000\016\000\000\000 \000\000\000"
    }
  }
}

node:  name: "adam_optimizer/gradients/conv2/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "adam_optimizer/gradients/conv2/Conv2D_grad/Shape"
input: "conv2/Variable/read"
input: "adam_optimizer/gradients/conv2/add_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

node:  name: "adam_optimizer/gradients/conv2/Conv2D_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\005\000\000\000\005\000\000\000 \000\000\000@\000\000\000"
    }
  }
}

node:  name: "adam_optimizer/gradients/conv2/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "pool1/MaxPool"
input: "adam_optimizer/gradients/conv2/Conv2D_grad/Shape_1"
input: "adam_optimizer/gradients/conv2/add_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

node:  name: "adam_optimizer/gradients/conv2/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^adam_optimizer/gradients/conv2/Conv2D_grad/Conv2DBackpropInput"
input: "^adam_optimizer/gradients/conv2/Conv2D_grad/Conv2DBackpropFilter"

node:  name: "adam_optimizer/gradients/conv2/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "adam_optimizer/gradients/conv2/Conv2D_grad/Conv2DBackpropInput"
input: "^adam_optimizer/gradients/conv2/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@adam_optimizer/gradients/conv2/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}

node:  name: "adam_optimizer/gradients/conv2/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "adam_optimizer/gradients/conv2/Conv2D_grad/Conv2DBackpropFilter"
input: "^adam_optimizer/gradients/conv2/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@adam_optimizer/gradients/conv2/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}

node:  name: "adam_optimizer/gradients/pool1/MaxPool_grad/MaxPoolGrad"
op: "MaxPoolGrad"
input: "conv1/Relu"
input: "pool1/MaxPool"
input: "adam_optimizer/gradients/conv2/Conv2D_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "ksize"
  value {
    list {
      i: 1
      i: 2
      i: 2
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 2
      i: 2
      i: 1
    }
  }
}

node:  name: "adam_optimizer/gradients/conv1/Relu_grad/ReluGrad"
op: "ReluGrad"
input: "adam_optimizer/gradients/pool1/MaxPool_grad/MaxPoolGrad"
input: "conv1/Relu"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

node:  name: "adam_optimizer/gradients/conv1/add_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "2\000\000\000\034\000\000\000\034\000\000\000 \000\000\000"
    }
  }
}

node:  name: "adam_optimizer/gradients/conv1/add_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 32
    }
  }
}

node:  name: "adam_optimizer/gradients/conv1/add_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "adam_optimizer/gradients/conv1/add_grad/Shape"
input: "adam_optimizer/gradients/conv1/add_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

node:  name: "adam_optimizer/gradients/conv1/add_grad/Sum"
op: "Sum"
input: "adam_optimizer/gradients/conv1/Relu_grad/ReluGrad"
input: "adam_optimizer/gradients/conv1/add_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

node:  name: "adam_optimizer/gradients/conv1/add_grad/Reshape"
op: "Reshape"
input: "adam_optimizer/gradients/conv1/add_grad/Sum"
input: "adam_optimizer/gradients/conv1/add_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

node:  name: "adam_optimizer/gradients/conv1/add_grad/Sum_1"
op: "Sum"
input: "adam_optimizer/gradients/conv1/Relu_grad/ReluGrad"
input: "adam_optimizer/gradients/conv1/add_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

node:  name: "adam_optimizer/gradients/conv1/add_grad/Reshape_1"
op: "Reshape"
input: "adam_optimizer/gradients/conv1/add_grad/Sum_1"
input: "adam_optimizer/gradients/conv1/add_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

node:  name: "adam_optimizer/gradients/conv1/add_grad/tuple/group_deps"
op: "NoOp"
input: "^adam_optimizer/gradients/conv1/add_grad/Reshape"
input: "^adam_optimizer/gradients/conv1/add_grad/Reshape_1"

node:  name: "adam_optimizer/gradients/conv1/add_grad/tuple/control_dependency"
op: "Identity"
input: "adam_optimizer/gradients/conv1/add_grad/Reshape"
input: "^adam_optimizer/gradients/conv1/add_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@adam_optimizer/gradients/conv1/add_grad/Reshape"
    }
  }
}

node:  name: "adam_optimizer/gradients/conv1/add_grad/tuple/control_dependency_1"
op: "Identity"
input: "adam_optimizer/gradients/conv1/add_grad/Reshape_1"
input: "^adam_optimizer/gradients/conv1/add_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@adam_optimizer/gradients/conv1/add_grad/Reshape_1"
    }
  }
}

node:  name: "adam_optimizer/gradients/conv1/Conv2D_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "2\000\000\000\034\000\000\000\034\000\000\000\001\000\000\000"
    }
  }
}

node:  name: "adam_optimizer/gradients/conv1/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "adam_optimizer/gradients/conv1/Conv2D_grad/Shape"
input: "conv1/Variable/read"
input: "adam_optimizer/gradients/conv1/add_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

node:  name: "adam_optimizer/gradients/conv1/Conv2D_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\005\000\000\000\005\000\000\000\001\000\000\000 \000\000\000"
    }
  }
}

node:  name: "adam_optimizer/gradients/conv1/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "reshape/Reshape"
input: "adam_optimizer/gradients/conv1/Conv2D_grad/Shape_1"
input: "adam_optimizer/gradients/conv1/add_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

node:  name: "adam_optimizer/gradients/conv1/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^adam_optimizer/gradients/conv1/Conv2D_grad/Conv2DBackpropInput"
input: "^adam_optimizer/gradients/conv1/Conv2D_grad/Conv2DBackpropFilter"

node:  name: "adam_optimizer/gradients/conv1/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "adam_optimizer/gradients/conv1/Conv2D_grad/Conv2DBackpropInput"
input: "^adam_optimizer/gradients/conv1/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@adam_optimizer/gradients/conv1/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}

node:  name: "adam_optimizer/gradients/conv1/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "adam_optimizer/gradients/conv1/Conv2D_grad/Conv2DBackpropFilter"
input: "^adam_optimizer/gradients/conv1/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@adam_optimizer/gradients/conv1/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}

node:  name: "adam_optimizer/beta1_power/initial_value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1/Variable"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.8999999761581421
    }
  }
}

node:  name: "adam_optimizer/beta1_power"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1/Variable"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

node:  name: "adam_optimizer/beta1_power/Assign"
op: "Assign"
input: "adam_optimizer/beta1_power"
input: "adam_optimizer/beta1_power/initial_value"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1/Variable"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

node:  name: "adam_optimizer/beta1_power/read"
op: "Identity"
input: "adam_optimizer/beta1_power"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1/Variable"
    }
  }
}

node:  name: "adam_optimizer/beta2_power/initial_value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1/Variable"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.9990000128746033
    }
  }
}

node:  name: "adam_optimizer/beta2_power"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1/Variable"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

node:  name: "adam_optimizer/beta2_power/Assign"
op: "Assign"
input: "adam_optimizer/beta2_power"
input: "adam_optimizer/beta2_power/initial_value"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1/Variable"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

node:  name: "adam_optimizer/beta2_power/read"
op: "Identity"
input: "adam_optimizer/beta2_power"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1/Variable"
    }
  }
}

node:  name: "conv1/Variable/Adam/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1/Variable"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
      float_val: 0.0
    }
  }
}

node:  name: "conv1/Variable/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1/Variable"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 5
      }
      dim {
        size: 5
      }
      dim {
        size: 1
      }
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

node:  name: "conv1/Variable/Adam/Assign"
op: "Assign"
input: "conv1/Variable/Adam"
input: "conv1/Variable/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1/Variable"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

node:  name: "conv1/Variable/Adam/read"
op: "Identity"
input: "conv1/Variable/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1/Variable"
    }
  }
}

node:  name: "conv1/Variable/Adam_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1/Variable"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
      float_val: 0.0
    }
  }
}

node:  name: "conv1/Variable/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1/Variable"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 5
      }
      dim {
        size: 5
      }
      dim {
        size: 1
      }
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

node:  name: "conv1/Variable/Adam_1/Assign"
op: "Assign"
input: "conv1/Variable/Adam_1"
input: "conv1/Variable/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1/Variable"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

node:  name: "conv1/Variable/Adam_1/read"
op: "Identity"
input: "conv1/Variable/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1/Variable"
    }
  }
}

node:  name: "conv1/Variable_1/Adam/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1/Variable_1"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 32
        }
      }
      float_val: 0.0
    }
  }
}

node:  name: "conv1/Variable_1/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1/Variable_1"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

node:  name: "conv1/Variable_1/Adam/Assign"
op: "Assign"
input: "conv1/Variable_1/Adam"
input: "conv1/Variable_1/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1/Variable_1"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

node:  name: "conv1/Variable_1/Adam/read"
op: "Identity"
input: "conv1/Variable_1/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1/Variable_1"
    }
  }
}

node:  name: "conv1/Variable_1/Adam_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1/Variable_1"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 32
        }
      }
      float_val: 0.0
    }
  }
}

node:  name: "conv1/Variable_1/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1/Variable_1"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

node:  name: "conv1/Variable_1/Adam_1/Assign"
op: "Assign"
input: "conv1/Variable_1/Adam_1"
input: "conv1/Variable_1/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1/Variable_1"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

node:  name: "conv1/Variable_1/Adam_1/read"
op: "Identity"
input: "conv1/Variable_1/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1/Variable_1"
    }
  }
}

node:  name: "conv2/Variable/Adam/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv2/Variable"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
      float_val: 0.0
    }
  }
}

node:  name: "conv2/Variable/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv2/Variable"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 5
      }
      dim {
        size: 5
      }
      dim {
        size: 32
      }
      dim {
        size: 64
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

node:  name: "conv2/Variable/Adam/Assign"
op: "Assign"
input: "conv2/Variable/Adam"
input: "conv2/Variable/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv2/Variable"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

node:  name: "conv2/Variable/Adam/read"
op: "Identity"
input: "conv2/Variable/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv2/Variable"
    }
  }
}

node:  name: "conv2/Variable/Adam_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv2/Variable"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
      float_val: 0.0
    }
  }
}

node:  name: "conv2/Variable/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv2/Variable"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 5
      }
      dim {
        size: 5
      }
      dim {
        size: 32
      }
      dim {
        size: 64
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

node:  name: "conv2/Variable/Adam_1/Assign"
op: "Assign"
input: "conv2/Variable/Adam_1"
input: "conv2/Variable/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv2/Variable"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

node:  name: "conv2/Variable/Adam_1/read"
op: "Identity"
input: "conv2/Variable/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv2/Variable"
    }
  }
}

node:  name: "conv2/Variable_1/Adam/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv2/Variable_1"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 64
        }
      }
      float_val: 0.0
    }
  }
}

node:  name: "conv2/Variable_1/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv2/Variable_1"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 64
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

node:  name: "conv2/Variable_1/Adam/Assign"
op: "Assign"
input: "conv2/Variable_1/Adam"
input: "conv2/Variable_1/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv2/Variable_1"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

node:  name: "conv2/Variable_1/Adam/read"
op: "Identity"
input: "conv2/Variable_1/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv2/Variable_1"
    }
  }
}

node:  name: "conv2/Variable_1/Adam_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv2/Variable_1"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 64
        }
      }
      float_val: 0.0
    }
  }
}

node:  name: "conv2/Variable_1/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv2/Variable_1"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 64
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

node:  name: "conv2/Variable_1/Adam_1/Assign"
op: "Assign"
input: "conv2/Variable_1/Adam_1"
input: "conv2/Variable_1/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv2/Variable_1"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

node:  name: "conv2/Variable_1/Adam_1/read"
op: "Identity"
input: "conv2/Variable_1/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv2/Variable_1"
    }
  }
}

node:  name: "fc1/Variable/Adam/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fc1/Variable"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 3136
        }
        dim {
          size: 1024
        }
      }
      float_val: 0.0
    }
  }
}

node:  name: "fc1/Variable/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fc1/Variable"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3136
      }
      dim {
        size: 1024
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

node:  name: "fc1/Variable/Adam/Assign"
op: "Assign"
input: "fc1/Variable/Adam"
input: "fc1/Variable/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fc1/Variable"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

node:  name: "fc1/Variable/Adam/read"
op: "Identity"
input: "fc1/Variable/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fc1/Variable"
    }
  }
}

node:  name: "fc1/Variable/Adam_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fc1/Variable"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 3136
        }
        dim {
          size: 1024
        }
      }
      float_val: 0.0
    }
  }
}

node:  name: "fc1/Variable/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fc1/Variable"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3136
      }
      dim {
        size: 1024
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

node:  name: "fc1/Variable/Adam_1/Assign"
op: "Assign"
input: "fc1/Variable/Adam_1"
input: "fc1/Variable/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fc1/Variable"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

node:  name: "fc1/Variable/Adam_1/read"
op: "Identity"
input: "fc1/Variable/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fc1/Variable"
    }
  }
}

node:  name: "fc1/Variable_1/Adam/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fc1/Variable_1"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 1024
        }
      }
      float_val: 0.0
    }
  }
}

node:  name: "fc1/Variable_1/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fc1/Variable_1"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1024
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

node:  name: "fc1/Variable_1/Adam/Assign"
op: "Assign"
input: "fc1/Variable_1/Adam"
input: "fc1/Variable_1/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fc1/Variable_1"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

node:  name: "fc1/Variable_1/Adam/read"
op: "Identity"
input: "fc1/Variable_1/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fc1/Variable_1"
    }
  }
}

node:  name: "fc1/Variable_1/Adam_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fc1/Variable_1"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 1024
        }
      }
      float_val: 0.0
    }
  }
}

node:  name: "fc1/Variable_1/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fc1/Variable_1"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1024
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

node:  name: "fc1/Variable_1/Adam_1/Assign"
op: "Assign"
input: "fc1/Variable_1/Adam_1"
input: "fc1/Variable_1/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fc1/Variable_1"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

node:  name: "fc1/Variable_1/Adam_1/read"
op: "Identity"
input: "fc1/Variable_1/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fc1/Variable_1"
    }
  }
}

node:  name: "fc2/Variable/Adam/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fc2/Variable"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 1024
        }
        dim {
          size: 10
        }
      }
      float_val: 0.0
    }
  }
}

node:  name: "fc2/Variable/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fc2/Variable"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1024
      }
      dim {
        size: 10
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

node:  name: "fc2/Variable/Adam/Assign"
op: "Assign"
input: "fc2/Variable/Adam"
input: "fc2/Variable/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fc2/Variable"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

node:  name: "fc2/Variable/Adam/read"
op: "Identity"
input: "fc2/Variable/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fc2/Variable"
    }
  }
}

node:  name: "fc2/Variable/Adam_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fc2/Variable"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 1024
        }
        dim {
          size: 10
        }
      }
      float_val: 0.0
    }
  }
}

node:  name: "fc2/Variable/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fc2/Variable"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1024
      }
      dim {
        size: 10
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

node:  name: "fc2/Variable/Adam_1/Assign"
op: "Assign"
input: "fc2/Variable/Adam_1"
input: "fc2/Variable/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fc2/Variable"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

node:  name: "fc2/Variable/Adam_1/read"
op: "Identity"
input: "fc2/Variable/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fc2/Variable"
    }
  }
}

node:  name: "fc2/Variable_1/Adam/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fc2/Variable_1"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 10
        }
      }
      float_val: 0.0
    }
  }
}

node:  name: "fc2/Variable_1/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fc2/Variable_1"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 10
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

node:  name: "fc2/Variable_1/Adam/Assign"
op: "Assign"
input: "fc2/Variable_1/Adam"
input: "fc2/Variable_1/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fc2/Variable_1"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

node:  name: "fc2/Variable_1/Adam/read"
op: "Identity"
input: "fc2/Variable_1/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fc2/Variable_1"
    }
  }
}

node:  name: "fc2/Variable_1/Adam_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fc2/Variable_1"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 10
        }
      }
      float_val: 0.0
    }
  }
}

node:  name: "fc2/Variable_1/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fc2/Variable_1"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 10
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

node:  name: "fc2/Variable_1/Adam_1/Assign"
op: "Assign"
input: "fc2/Variable_1/Adam_1"
input: "fc2/Variable_1/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fc2/Variable_1"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

node:  name: "fc2/Variable_1/Adam_1/read"
op: "Identity"
input: "fc2/Variable_1/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fc2/Variable_1"
    }
  }
}

node:  name: "adam_optimizer/Adam/learning_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-05
    }
  }
}

node:  name: "adam_optimizer/Adam/beta1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.8999999761581421
    }
  }
}

node:  name: "adam_optimizer/Adam/beta2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.9990000128746033
    }
  }
}

node:  name: "adam_optimizer/Adam/epsilon"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.99999993922529e-09
    }
  }
}

node:  name: "adam_optimizer/Adam/update_conv1/Variable/ApplyAdam"
op: "ApplyAdam"
input: "conv1/Variable"
input: "conv1/Variable/Adam"
input: "conv1/Variable/Adam_1"
input: "adam_optimizer/beta1_power/read"
input: "adam_optimizer/beta2_power/read"
input: "adam_optimizer/Adam/learning_rate"
input: "adam_optimizer/Adam/beta1"
input: "adam_optimizer/Adam/beta2"
input: "adam_optimizer/Adam/epsilon"
input: "adam_optimizer/gradients/conv1/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1/Variable"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}

node:  name: "adam_optimizer/Adam/update_conv1/Variable_1/ApplyAdam"
op: "ApplyAdam"
input: "conv1/Variable_1"
input: "conv1/Variable_1/Adam"
input: "conv1/Variable_1/Adam_1"
input: "adam_optimizer/beta1_power/read"
input: "adam_optimizer/beta2_power/read"
input: "adam_optimizer/Adam/learning_rate"
input: "adam_optimizer/Adam/beta1"
input: "adam_optimizer/Adam/beta2"
input: "adam_optimizer/Adam/epsilon"
input: "adam_optimizer/gradients/conv1/add_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1/Variable_1"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}

node:  name: "adam_optimizer/Adam/update_conv2/Variable/ApplyAdam"
op: "ApplyAdam"
input: "conv2/Variable"
input: "conv2/Variable/Adam"
input: "conv2/Variable/Adam_1"
input: "adam_optimizer/beta1_power/read"
input: "adam_optimizer/beta2_power/read"
input: "adam_optimizer/Adam/learning_rate"
input: "adam_optimizer/Adam/beta1"
input: "adam_optimizer/Adam/beta2"
input: "adam_optimizer/Adam/epsilon"
input: "adam_optimizer/gradients/conv2/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv2/Variable"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}

node:  name: "adam_optimizer/Adam/update_conv2/Variable_1/ApplyAdam"
op: "ApplyAdam"
input: "conv2/Variable_1"
input: "conv2/Variable_1/Adam"
input: "conv2/Variable_1/Adam_1"
input: "adam_optimizer/beta1_power/read"
input: "adam_optimizer/beta2_power/read"
input: "adam_optimizer/Adam/learning_rate"
input: "adam_optimizer/Adam/beta1"
input: "adam_optimizer/Adam/beta2"
input: "adam_optimizer/Adam/epsilon"
input: "adam_optimizer/gradients/conv2/add_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv2/Variable_1"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}

node:  name: "adam_optimizer/Adam/update_fc1/Variable/ApplyAdam"
op: "ApplyAdam"
input: "fc1/Variable"
input: "fc1/Variable/Adam"
input: "fc1/Variable/Adam_1"
input: "adam_optimizer/beta1_power/read"
input: "adam_optimizer/beta2_power/read"
input: "adam_optimizer/Adam/learning_rate"
input: "adam_optimizer/Adam/beta1"
input: "adam_optimizer/Adam/beta2"
input: "adam_optimizer/Adam/epsilon"
input: "adam_optimizer/gradients/fc1/MatMul_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fc1/Variable"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}

node:  name: "adam_optimizer/Adam/update_fc1/Variable_1/ApplyAdam"
op: "ApplyAdam"
input: "fc1/Variable_1"
input: "fc1/Variable_1/Adam"
input: "fc1/Variable_1/Adam_1"
input: "adam_optimizer/beta1_power/read"
input: "adam_optimizer/beta2_power/read"
input: "adam_optimizer/Adam/learning_rate"
input: "adam_optimizer/Adam/beta1"
input: "adam_optimizer/Adam/beta2"
input: "adam_optimizer/Adam/epsilon"
input: "adam_optimizer/gradients/fc1/add_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fc1/Variable_1"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}

node:  name: "adam_optimizer/Adam/update_fc2/Variable/ApplyAdam"
op: "ApplyAdam"
input: "fc2/Variable"
input: "fc2/Variable/Adam"
input: "fc2/Variable/Adam_1"
input: "adam_optimizer/beta1_power/read"
input: "adam_optimizer/beta2_power/read"
input: "adam_optimizer/Adam/learning_rate"
input: "adam_optimizer/Adam/beta1"
input: "adam_optimizer/Adam/beta2"
input: "adam_optimizer/Adam/epsilon"
input: "adam_optimizer/gradients/fc2/MatMul_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fc2/Variable"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}

node:  name: "adam_optimizer/Adam/update_fc2/Variable_1/ApplyAdam"
op: "ApplyAdam"
input: "fc2/Variable_1"
input: "fc2/Variable_1/Adam"
input: "fc2/Variable_1/Adam_1"
input: "adam_optimizer/beta1_power/read"
input: "adam_optimizer/beta2_power/read"
input: "adam_optimizer/Adam/learning_rate"
input: "adam_optimizer/Adam/beta1"
input: "adam_optimizer/Adam/beta2"
input: "adam_optimizer/Adam/epsilon"
input: "adam_optimizer/gradients/fc2/add_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fc2/Variable_1"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}

node:  name: "adam_optimizer/Adam/mul"
op: "Mul"
input: "adam_optimizer/beta1_power/read"
input: "adam_optimizer/Adam/beta1"
input: "^adam_optimizer/Adam/update_conv1/Variable/ApplyAdam"
input: "^adam_optimizer/Adam/update_conv1/Variable_1/ApplyAdam"
input: "^adam_optimizer/Adam/update_conv2/Variable/ApplyAdam"
input: "^adam_optimizer/Adam/update_conv2/Variable_1/ApplyAdam"
input: "^adam_optimizer/Adam/update_fc1/Variable/ApplyAdam"
input: "^adam_optimizer/Adam/update_fc1/Variable_1/ApplyAdam"
input: "^adam_optimizer/Adam/update_fc2/Variable/ApplyAdam"
input: "^adam_optimizer/Adam/update_fc2/Variable_1/ApplyAdam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1/Variable"
    }
  }
}

node:  name: "adam_optimizer/Adam/Assign"
op: "Assign"
input: "adam_optimizer/beta1_power"
input: "adam_optimizer/Adam/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1/Variable"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

node:  name: "adam_optimizer/Adam/mul_1"
op: "Mul"
input: "adam_optimizer/beta2_power/read"
input: "adam_optimizer/Adam/beta2"
input: "^adam_optimizer/Adam/update_conv1/Variable/ApplyAdam"
input: "^adam_optimizer/Adam/update_conv1/Variable_1/ApplyAdam"
input: "^adam_optimizer/Adam/update_conv2/Variable/ApplyAdam"
input: "^adam_optimizer/Adam/update_conv2/Variable_1/ApplyAdam"
input: "^adam_optimizer/Adam/update_fc1/Variable/ApplyAdam"
input: "^adam_optimizer/Adam/update_fc1/Variable_1/ApplyAdam"
input: "^adam_optimizer/Adam/update_fc2/Variable/ApplyAdam"
input: "^adam_optimizer/Adam/update_fc2/Variable_1/ApplyAdam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1/Variable"
    }
  }
}

node:  name: "adam_optimizer/Adam/Assign_1"
op: "Assign"
input: "adam_optimizer/beta2_power"
input: "adam_optimizer/Adam/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1/Variable"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

node:  name: "adam_optimizer/Adam"
op: "NoOp"
input: "^adam_optimizer/Adam/update_conv1/Variable/ApplyAdam"
input: "^adam_optimizer/Adam/update_conv1/Variable_1/ApplyAdam"
input: "^adam_optimizer/Adam/update_conv2/Variable/ApplyAdam"
input: "^adam_optimizer/Adam/update_conv2/Variable_1/ApplyAdam"
input: "^adam_optimizer/Adam/update_fc1/Variable/ApplyAdam"
input: "^adam_optimizer/Adam/update_fc1/Variable_1/ApplyAdam"
input: "^adam_optimizer/Adam/update_fc2/Variable/ApplyAdam"
input: "^adam_optimizer/Adam/update_fc2/Variable_1/ApplyAdam"
input: "^adam_optimizer/Adam/Assign"
input: "^adam_optimizer/Adam/Assign_1"

node:  name: "accuracy/ArgMax/dimension"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

node:  name: "accuracy/ArgMax"
op: "ArgMax"
input: "fc2/add"
input: "accuracy/ArgMax/dimension"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "output_type"
  value {
    type: DT_INT64
  }
}

node:  name: "accuracy/ArgMax_1/dimension"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

node:  name: "accuracy/ArgMax_1"
op: "ArgMax"
input: "Placeholder_1"
input: "accuracy/ArgMax_1/dimension"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "output_type"
  value {
    type: DT_INT64
  }
}

node:  name: "accuracy/Equal"
op: "Equal"
input: "accuracy/ArgMax"
input: "accuracy/ArgMax_1"
attr {
  key: "T"
  value {
    type: DT_INT64
  }
}

node:  name: "accuracy/Cast"
op: "Cast"
input: "accuracy/Equal"
attr {
  key: "DstT"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "SrcT"
  value {
    type: DT_BOOL
  }
}

node:  name: "Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}

node:  name: "Mean_1"
op: "Mean"
input: "accuracy/Cast"
input: "Const_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

node:  name: "save/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
      }
      string_val: "model"
    }
  }
}

node:  name: "save/SaveV2/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 26
        }
      }
      string_val: "adam_optimizer/beta1_power"
      string_val: "adam_optimizer/beta2_power"
      string_val: "conv1/Variable"
      string_val: "conv1/Variable/Adam"
      string_val: "conv1/Variable/Adam_1"
      string_val: "conv1/Variable_1"
      string_val: "conv1/Variable_1/Adam"
      string_val: "conv1/Variable_1/Adam_1"
      string_val: "conv2/Variable"
      string_val: "conv2/Variable/Adam"
      string_val: "conv2/Variable/Adam_1"
      string_val: "conv2/Variable_1"
      string_val: "conv2/Variable_1/Adam"
      string_val: "conv2/Variable_1/Adam_1"
      string_val: "fc1/Variable"
      string_val: "fc1/Variable/Adam"
      string_val: "fc1/Variable/Adam_1"
      string_val: "fc1/Variable_1"
      string_val: "fc1/Variable_1/Adam"
      string_val: "fc1/Variable_1/Adam_1"
      string_val: "fc2/Variable"
      string_val: "fc2/Variable/Adam"
      string_val: "fc2/Variable/Adam_1"
      string_val: "fc2/Variable_1"
      string_val: "fc2/Variable_1/Adam"
      string_val: "fc2/Variable_1/Adam_1"
    }
  }
}

node:  name: "save/SaveV2/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 26
        }
      }
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
    }
  }
}

node:  name: "save/SaveV2"
op: "SaveV2"
input: "save/Const"
input: "save/SaveV2/tensor_names"
input: "save/SaveV2/shape_and_slices"
input: "adam_optimizer/beta1_power"
input: "adam_optimizer/beta2_power"
input: "conv1/Variable"
input: "conv1/Variable/Adam"
input: "conv1/Variable/Adam_1"
input: "conv1/Variable_1"
input: "conv1/Variable_1/Adam"
input: "conv1/Variable_1/Adam_1"
input: "conv2/Variable"
input: "conv2/Variable/Adam"
input: "conv2/Variable/Adam_1"
input: "conv2/Variable_1"
input: "conv2/Variable_1/Adam"
input: "conv2/Variable_1/Adam_1"
input: "fc1/Variable"
input: "fc1/Variable/Adam"
input: "fc1/Variable/Adam_1"
input: "fc1/Variable_1"
input: "fc1/Variable_1/Adam"
input: "fc1/Variable_1/Adam_1"
input: "fc2/Variable"
input: "fc2/Variable/Adam"
input: "fc2/Variable/Adam_1"
input: "fc2/Variable_1"
input: "fc2/Variable_1/Adam"
input: "fc2/Variable_1/Adam_1"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
    }
  }
}

node:  name: "save/control_dependency"
op: "Identity"
input: "save/Const"
input: "^save/SaveV2"
attr {
  key: "T"
  value {
    type: DT_STRING
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@save/Const"
    }
  }
}

node:  name: "save/RestoreV2/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "adam_optimizer/beta1_power"
    }
  }
}

node:  name: "save/RestoreV2/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

node:  name: "save/RestoreV2"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2/tensor_names"
input: "save/RestoreV2/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

node:  name: "save/Assign"
op: "Assign"
input: "adam_optimizer/beta1_power"
input: "save/RestoreV2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1/Variable"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

node:  name: "save/RestoreV2_1/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "adam_optimizer/beta2_power"
    }
  }
}

node:  name: "save/RestoreV2_1/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

node:  name: "save/RestoreV2_1"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_1/tensor_names"
input: "save/RestoreV2_1/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

node:  name: "save/Assign_1"
op: "Assign"
input: "adam_optimizer/beta2_power"
input: "save/RestoreV2_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1/Variable"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

node:  name: "save/RestoreV2_2/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "conv1/Variable"
    }
  }
}

node:  name: "save/RestoreV2_2/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

node:  name: "save/RestoreV2_2"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_2/tensor_names"
input: "save/RestoreV2_2/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

node:  name: "save/Assign_2"
op: "Assign"
input: "conv1/Variable"
input: "save/RestoreV2_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1/Variable"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

node:  name: "save/RestoreV2_3/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "conv1/Variable/Adam"
    }
  }
}

node:  name: "save/RestoreV2_3/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

node:  name: "save/RestoreV2_3"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_3/tensor_names"
input: "save/RestoreV2_3/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

node:  name: "save/Assign_3"
op: "Assign"
input: "conv1/Variable/Adam"
input: "save/RestoreV2_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1/Variable"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

node:  name: "save/RestoreV2_4/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "conv1/Variable/Adam_1"
    }
  }
}

node:  name: "save/RestoreV2_4/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

node:  name: "save/RestoreV2_4"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_4/tensor_names"
input: "save/RestoreV2_4/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

node:  name: "save/Assign_4"
op: "Assign"
input: "conv1/Variable/Adam_1"
input: "save/RestoreV2_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1/Variable"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

node:  name: "save/RestoreV2_5/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "conv1/Variable_1"
    }
  }
}

node:  name: "save/RestoreV2_5/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

node:  name: "save/RestoreV2_5"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_5/tensor_names"
input: "save/RestoreV2_5/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

node:  name: "save/Assign_5"
op: "Assign"
input: "conv1/Variable_1"
input: "save/RestoreV2_5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1/Variable_1"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

node:  name: "save/RestoreV2_6/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "conv1/Variable_1/Adam"
    }
  }
}

node:  name: "save/RestoreV2_6/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

node:  name: "save/RestoreV2_6"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_6/tensor_names"
input: "save/RestoreV2_6/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

node:  name: "save/Assign_6"
op: "Assign"
input: "conv1/Variable_1/Adam"
input: "save/RestoreV2_6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1/Variable_1"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

node:  name: "save/RestoreV2_7/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "conv1/Variable_1/Adam_1"
    }
  }
}

node:  name: "save/RestoreV2_7/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

node:  name: "save/RestoreV2_7"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_7/tensor_names"
input: "save/RestoreV2_7/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

node:  name: "save/Assign_7"
op: "Assign"
input: "conv1/Variable_1/Adam_1"
input: "save/RestoreV2_7"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1/Variable_1"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

node:  name: "save/RestoreV2_8/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "conv2/Variable"
    }
  }
}

node:  name: "save/RestoreV2_8/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

node:  name: "save/RestoreV2_8"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_8/tensor_names"
input: "save/RestoreV2_8/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

node:  name: "save/Assign_8"
op: "Assign"
input: "conv2/Variable"
input: "save/RestoreV2_8"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv2/Variable"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

node:  name: "save/RestoreV2_9/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "conv2/Variable/Adam"
    }
  }
}

node:  name: "save/RestoreV2_9/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

node:  name: "save/RestoreV2_9"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_9/tensor_names"
input: "save/RestoreV2_9/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

node:  name: "save/Assign_9"
op: "Assign"
input: "conv2/Variable/Adam"
input: "save/RestoreV2_9"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv2/Variable"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

node:  name: "save/RestoreV2_10/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "conv2/Variable/Adam_1"
    }
  }
}

node:  name: "save/RestoreV2_10/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

node:  name: "save/RestoreV2_10"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_10/tensor_names"
input: "save/RestoreV2_10/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

node:  name: "save/Assign_10"
op: "Assign"
input: "conv2/Variable/Adam_1"
input: "save/RestoreV2_10"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv2/Variable"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

node:  name: "save/RestoreV2_11/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "conv2/Variable_1"
    }
  }
}

node:  name: "save/RestoreV2_11/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

node:  name: "save/RestoreV2_11"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_11/tensor_names"
input: "save/RestoreV2_11/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

node:  name: "save/Assign_11"
op: "Assign"
input: "conv2/Variable_1"
input: "save/RestoreV2_11"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv2/Variable_1"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

node:  name: "save/RestoreV2_12/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "conv2/Variable_1/Adam"
    }
  }
}

node:  name: "save/RestoreV2_12/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

node:  name: "save/RestoreV2_12"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_12/tensor_names"
input: "save/RestoreV2_12/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

node:  name: "save/Assign_12"
op: "Assign"
input: "conv2/Variable_1/Adam"
input: "save/RestoreV2_12"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv2/Variable_1"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

node:  name: "save/RestoreV2_13/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "conv2/Variable_1/Adam_1"
    }
  }
}

node:  name: "save/RestoreV2_13/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

node:  name: "save/RestoreV2_13"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_13/tensor_names"
input: "save/RestoreV2_13/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

node:  name: "save/Assign_13"
op: "Assign"
input: "conv2/Variable_1/Adam_1"
input: "save/RestoreV2_13"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv2/Variable_1"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

node:  name: "save/RestoreV2_14/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "fc1/Variable"
    }
  }
}

node:  name: "save/RestoreV2_14/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

node:  name: "save/RestoreV2_14"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_14/tensor_names"
input: "save/RestoreV2_14/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

node:  name: "save/Assign_14"
op: "Assign"
input: "fc1/Variable"
input: "save/RestoreV2_14"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fc1/Variable"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

node:  name: "save/RestoreV2_15/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "fc1/Variable/Adam"
    }
  }
}

node:  name: "save/RestoreV2_15/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

node:  name: "save/RestoreV2_15"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_15/tensor_names"
input: "save/RestoreV2_15/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

node:  name: "save/Assign_15"
op: "Assign"
input: "fc1/Variable/Adam"
input: "save/RestoreV2_15"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fc1/Variable"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

node:  name: "save/RestoreV2_16/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "fc1/Variable/Adam_1"
    }
  }
}

node:  name: "save/RestoreV2_16/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

node:  name: "save/RestoreV2_16"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_16/tensor_names"
input: "save/RestoreV2_16/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

node:  name: "save/Assign_16"
op: "Assign"
input: "fc1/Variable/Adam_1"
input: "save/RestoreV2_16"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fc1/Variable"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

node:  name: "save/RestoreV2_17/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "fc1/Variable_1"
    }
  }
}

node:  name: "save/RestoreV2_17/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

node:  name: "save/RestoreV2_17"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_17/tensor_names"
input: "save/RestoreV2_17/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

node:  name: "save/Assign_17"
op: "Assign"
input: "fc1/Variable_1"
input: "save/RestoreV2_17"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fc1/Variable_1"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

node:  name: "save/RestoreV2_18/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "fc1/Variable_1/Adam"
    }
  }
}

node:  name: "save/RestoreV2_18/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

node:  name: "save/RestoreV2_18"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_18/tensor_names"
input: "save/RestoreV2_18/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

node:  name: "save/Assign_18"
op: "Assign"
input: "fc1/Variable_1/Adam"
input: "save/RestoreV2_18"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fc1/Variable_1"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

node:  name: "save/RestoreV2_19/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "fc1/Variable_1/Adam_1"
    }
  }
}

node:  name: "save/RestoreV2_19/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

node:  name: "save/RestoreV2_19"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_19/tensor_names"
input: "save/RestoreV2_19/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

node:  name: "save/Assign_19"
op: "Assign"
input: "fc1/Variable_1/Adam_1"
input: "save/RestoreV2_19"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fc1/Variable_1"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

node:  name: "save/RestoreV2_20/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "fc2/Variable"
    }
  }
}

node:  name: "save/RestoreV2_20/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

node:  name: "save/RestoreV2_20"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_20/tensor_names"
input: "save/RestoreV2_20/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

node:  name: "save/Assign_20"
op: "Assign"
input: "fc2/Variable"
input: "save/RestoreV2_20"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fc2/Variable"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

node:  name: "save/RestoreV2_21/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "fc2/Variable/Adam"
    }
  }
}

node:  name: "save/RestoreV2_21/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

node:  name: "save/RestoreV2_21"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_21/tensor_names"
input: "save/RestoreV2_21/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

node:  name: "save/Assign_21"
op: "Assign"
input: "fc2/Variable/Adam"
input: "save/RestoreV2_21"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fc2/Variable"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

node:  name: "save/RestoreV2_22/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "fc2/Variable/Adam_1"
    }
  }
}

node:  name: "save/RestoreV2_22/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

node:  name: "save/RestoreV2_22"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_22/tensor_names"
input: "save/RestoreV2_22/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

node:  name: "save/Assign_22"
op: "Assign"
input: "fc2/Variable/Adam_1"
input: "save/RestoreV2_22"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fc2/Variable"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

node:  name: "save/RestoreV2_23/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "fc2/Variable_1"
    }
  }
}

node:  name: "save/RestoreV2_23/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

node:  name: "save/RestoreV2_23"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_23/tensor_names"
input: "save/RestoreV2_23/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

node:  name: "save/Assign_23"
op: "Assign"
input: "fc2/Variable_1"
input: "save/RestoreV2_23"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fc2/Variable_1"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

node:  name: "save/RestoreV2_24/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "fc2/Variable_1/Adam"
    }
  }
}

node:  name: "save/RestoreV2_24/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

node:  name: "save/RestoreV2_24"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_24/tensor_names"
input: "save/RestoreV2_24/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

node:  name: "save/Assign_24"
op: "Assign"
input: "fc2/Variable_1/Adam"
input: "save/RestoreV2_24"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fc2/Variable_1"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

node:  name: "save/RestoreV2_25/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "fc2/Variable_1/Adam_1"
    }
  }
}

node:  name: "save/RestoreV2_25/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

node:  name: "save/RestoreV2_25"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_25/tensor_names"
input: "save/RestoreV2_25/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

node:  name: "save/Assign_25"
op: "Assign"
input: "fc2/Variable_1/Adam_1"
input: "save/RestoreV2_25"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fc2/Variable_1"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

node:  name: "save/restore_all"
op: "NoOp"
input: "^save/Assign"
input: "^save/Assign_1"
input: "^save/Assign_2"
input: "^save/Assign_3"
input: "^save/Assign_4"
input: "^save/Assign_5"
input: "^save/Assign_6"
input: "^save/Assign_7"
input: "^save/Assign_8"
input: "^save/Assign_9"
input: "^save/Assign_10"
input: "^save/Assign_11"
input: "^save/Assign_12"
input: "^save/Assign_13"
input: "^save/Assign_14"
input: "^save/Assign_15"
input: "^save/Assign_16"
input: "^save/Assign_17"
input: "^save/Assign_18"
input: "^save/Assign_19"
input: "^save/Assign_20"
input: "^save/Assign_21"
input: "^save/Assign_22"
input: "^save/Assign_23"
input: "^save/Assign_24"
input: "^save/Assign_25"

node:  name: "Placeholder_2"
op: "Placeholder"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 5
      }
      dim {
        size: 5
      }
      dim {
        size: 1
      }
      dim {
        size: 32
      }
    }
  }
}

node:  name: "Placeholder_3"
op: "Placeholder"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 4
      }
    }
  }
}

